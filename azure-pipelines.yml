trigger:
- '*'

stages:
- stage: 'Build'
  displayName: 'Build Stage'
  jobs: 
  - job:
    displayName: 'Build Job'

    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.13.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g @angular/cli
        
        npm install

        ng build

        echo "BUILD @ $(date +"%Y-%m-%d %H:%M:%S")" > dist/build.info
        echo "" >> dist/build.info
        echo "$(ng --version)" >> dist/buildBuildarchive'

    # kopiuje zbudowany projekt do `ArtifactStagingDirectory`
    - task: CopyFiles@2
      displayName: 'Copy Build project to Artifact Staging Directory'
      inputs:
        Contents: |
          'build.zip'
          'dist/build.info'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    # wysyÅ‚a zbudowany projekt jak artefakt do Azure'a
    # format nazwy - > `BUILD_<DATA BUILD'a>`
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs: 
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: Build
  
#TODO: *publish build web app*

- stage: 'Dev'
  displayName: 'Publish-Dev Stage'
  dependsOn: Build
  jobs: 
  - job:
    displayName: 'Dev'

    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm

    steps:
    - script: echo "Dev"

- stage: 'Prod'
  displayName: 'Publish-Prod Stage'
  dependsOn: Dev
  jobs: 
  - job:
    displayName: 'Prod'

    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm
      
    steps:
    - script: echo "Prod"