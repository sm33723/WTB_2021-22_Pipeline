trigger:
- '*'

stages:
# Build
- stage: 'Build'
  displayName: 'Build Stage'
  jobs: 
  - job:
    displayName: 'Build Job'

    # build na ubuntu-20.04 z npm
    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm

    steps:
      # installuje Node
    - task: NodeTool@0
      inputs:
        versionSpec: '16'
      displayName: 'Install Node.js'

      # skrypt bash -> instalacja angular cli + dependencies + build + build.info
    - script: |
        npm install -g @angular/cli
        npm install
        ng build
        
        echo "BUILD @ $(date +"%Y-%m-%d %H:%M:%S")" > dist/build.info
        echo "" >> dist/build.info
        echo "$(ng --version)" >> dist/build.info

        zip -r build.zip ./dist
      displayName: 'build project'

    # kopiuje zbudowany projekt do `ArtifactStagingDirectory`
    - task: CopyFiles@2
      displayName: 'Copy project to Artifact Staging Directory'
      inputs:
        Contents: 'build.zip'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    # wysyła zbudowany projekt jak artefakt do Azure'a
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs: 
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: Build

# Wysłanie zbudowanego projektu do środowiska dev
- stage: 'Dev'
  displayName: 'Publish-Dev Stage'
  dependsOn: Build
  
  jobs: 
  - job:
    displayName: 'Dev'

    pool:
      vmImage: 'ubuntu-20.04'

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: Build
        downloadPath: '$(System.ArtifactsDirectory)' 

    - script: ls

    - script: echo $(System.DefaultWorkingDirectory)
    - script: ls $(System.DefaultWorkingDirectory)

    - script: echo $(System.ArtifactsDirectory)
    - script: ls $(System.ArtifactsDirectory)

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure for Students(dbad40a1-fabb-4bbc-b95a-3f8941cd501c)'
        appType: 'webAppLinux'
        WebAppName: 'wtb-2021-22-pipeline-dev'
        packageForLinux: '$(System.ArtifactsDirectory)/Build/build.zip'
        RuntimeStack: 'NODE|16-lts'

# Wysłanie zbudowanego projektu do środowiska prod (po manualnej aporbacie)
- stage: 'Prod'
  displayName: 'Publish-Prod Stage'
  dependsOn: Dev
 
  jobs: 
  - job:
    displayName: 'Prod'

    pool:
      vmImage: 'ubuntu-20.04'

    steps:
    - script: echo "Prod"